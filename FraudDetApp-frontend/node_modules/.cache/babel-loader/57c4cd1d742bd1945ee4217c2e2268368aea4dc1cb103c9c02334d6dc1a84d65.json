{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Card, CardBody, CardFooter, Typography, Input, Button } from \"@material-tailwind/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGPT = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsLoading(true);\n    const eventSource = new EventSource(`http://localhost:8000/api/chatbot/?message=${encodeURIComponent(input)}`);\n    eventSource.onmessage = event => {\n      const responseObject = JSON.parse(event.data);\n      setMessages(prev => [...prev, {\n        role: \"assistant\",\n        content: responseObject.content || \"\"\n      }]);\n      setIsLoading(false);\n    };\n    eventSource.onerror = error => {\n      console.log(\"Error with SSE connection:\", error);\n      eventSource.close();\n      setIsLoading(false);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"w-full max-w-[800px] mx-auto h-[80vh] flex flex-col\",\n    placeholder: undefined,\n    children: [/*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"flex-grow overflow-y-auto p-4\",\n      placeholder: undefined,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${message.role === \"user\" ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"paragraph\",\n          color: message.role === \"user\" ? \"blue\" : \"gray\",\n          className: `inline-block p-3 rounded-lg ${message.role === \"user\" ? \"bg-blue-100 text-blue-900\" : \"bg-gray-100 text-gray-900\"}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      placeholder: undefined,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Type your message here...\",\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          className: \"flex-grow\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isLoading,\n          placeholder: undefined,\n          children: isLoading ? \"Thinking...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGPT, \"BafHsdwijczbHREsN9kq6NCtkT8=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","CardBody","CardFooter","Typography","Input","Button","jsxDEV","_jsxDEV","ChatGPT","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","role","content","prev","eventSource","EventSource","encodeURIComponent","onmessage","event","responseObject","JSON","parse","data","onerror","error","console","log","close","className","placeholder","undefined","children","map","message","index","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { FC, useEffect, useState, useRef } from \"react\";\nimport {\n    Card,\n    CardBody,\n    CardFooter,\n    Typography,\n    Input,\n    Button,\n} from \"@material-tailwind/react\";\n\ninterface IMessage {\n    role: string;\n    content: string;\n}\n\nconst ChatGPT: FC = () => {\n    const [messages, setMessages] = useState<IMessage[]>([]);\n    const [input, setInput] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const messagesEndRef = useRef<null | HTMLDivElement>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!input.trim()) return;\n\n        const userMessage: IMessage = { role: \"user\", content: input };\n        setMessages(prev => [...prev, userMessage]);\n        setInput(\"\");\n        setIsLoading(true);\n\n        const eventSource = new EventSource(`http://localhost:8000/api/chatbot/?message=${encodeURIComponent(input)}`);\n\n        eventSource.onmessage = (event) => {\n            const responseObject = JSON.parse(event.data);\n            setMessages(prev => [\n                ...prev,\n                { role: \"assistant\", content: responseObject.content || \"\" }\n            ]);\n            setIsLoading(false);\n        };\n\n        eventSource.onerror = (error) => {\n            console.log(\"Error with SSE connection:\", error);\n            eventSource.close();\n            setIsLoading(false);\n        };\n    };\n\n    return (\n        <Card className=\"w-full max-w-[800px] mx-auto h-[80vh] flex flex-col\" placeholder={undefined}>\n            <CardBody className=\"flex-grow overflow-y-auto p-4\" placeholder={undefined}>\n                {messages.map((message, index) => (\n                    <div\n                        key={index}\n                        className={`mb-4 ${message.role === \"user\" ? \"text-right\" : \"text-left\"\n                            }`}\n                    >\n                        <Typography\n                            variant=\"paragraph\"\n                            color={message.role === \"user\" ? \"blue\" : \"gray\"}\n                            className={`inline-block p-3 rounded-lg ${message.role === \"user\"\n                                ? \"bg-blue-100 text-blue-900\"\n                                : \"bg-gray-100 text-gray-900\"\n                                }`}\n                        >\n                            {message.content}\n                        </Typography>\n                    </div>\n                ))}\n                <div ref={messagesEndRef} />\n            </CardBody>\n            <CardFooter placeholder={undefined}>\n                <form onSubmit={handleSubmit} className=\"flex gap-2\">\n                    <Input\n                        placeholder=\"Type your message here...\"\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        className=\"flex-grow\"\n                        disabled={isLoading}\n                    />\n                    <Button type=\"submit\" disabled={isLoading} placeholder={undefined}>\n                        {isLoading ? \"Thinking...\" : \"Send\"}\n                    </Button>\n                </form>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default ChatGPT;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}