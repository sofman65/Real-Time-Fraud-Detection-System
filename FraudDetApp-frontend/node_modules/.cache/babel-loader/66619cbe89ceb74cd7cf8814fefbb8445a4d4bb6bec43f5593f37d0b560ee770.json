{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/ThreeScene.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Cube Component that rotates\nconst RotatingCube = () => {\n  _s();\n  const meshRef = useRef(null);\n\n  // Rotate the cube\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += 0.01;\n      meshRef.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#00FFBC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(RotatingCube, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = RotatingCube;\nconst ThreeScene = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      zIndex: -1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RotatingCube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RotatingCube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RotatingCube, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ThreeScene;\nexport default ThreeScene;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatingCube\");\n$RefreshReg$(_c2, \"ThreeScene\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","jsxDEV","_jsxDEV","RotatingCube","_s","meshRef","current","rotation","x","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","ThreeScene","style","position","top","left","zIndex","intensity","_c2","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/ThreeScene.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { Mesh } from \"three\";\n\n// Cube Component that rotates\nconst RotatingCube: React.FC = () => {\n    const meshRef = useRef<Mesh>(null);\n\n    // Rotate the cube\n    useFrame(() => {\n        if (meshRef.current) {\n            meshRef.current.rotation.x += 0.01;\n            meshRef.current.rotation.y += 0.01;\n        }\n    });\n\n    return (\n        <mesh ref={meshRef}>\n            <boxGeometry args={[1, 1, 1]} />\n            <meshStandardMaterial color={\"#00FFBC\"} />\n        </mesh>\n    );\n};\n\nconst ThreeScene: React.FC = () => {\n    return (\n        <Canvas style={{ position: \"absolute\", top: 0, left: 0, zIndex: -1 }}>\n            {/* Lighting for the 3D Scene */}\n            <ambientLight intensity={0.5} />\n            <pointLight position={[10, 10, 10]} />\n            {/* Multiple rotating cubes */}\n            <RotatingCube />\n            <RotatingCube />\n            <RotatingCube />\n        </Canvas>\n    );\n};\n\nexport default ThreeScene;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD;AACA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,OAAO,GAAGP,MAAM,CAAO,IAAI,CAAC;;EAElC;EACAE,QAAQ,CAAC,MAAM;IACX,IAAIK,OAAO,CAACC,OAAO,EAAE;MACjBD,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;MAClCH,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAI,IAAI;IACtC;EACJ,CAAC,CAAC;EAEF,oBACIP,OAAA;IAAMQ,GAAG,EAAEL,OAAQ;IAAAM,QAAA,gBACfT,OAAA;MAAaU,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCd,OAAA;MAAsBe,KAAK,EAAE;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAACZ,EAAA,CAjBID,YAAsB;EAAA,QAIxBH,QAAQ;AAAA;AAAAkB,EAAA,GAJNf,YAAsB;AAmB5B,MAAMgB,UAAoB,GAAGA,CAAA,KAAM;EAC/B,oBACIjB,OAAA,CAACH,MAAM;IAACqB,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAE;IAAAb,QAAA,gBAEjET,OAAA;MAAcuB,SAAS,EAAE;IAAI;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCd,OAAA;MAAYmB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtCd,OAAA,CAACC,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBd,OAAA,CAACC,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBd,OAAA,CAACC,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEjB,CAAC;AAACU,GAAA,GAZIP,UAAoB;AAc1B,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}