{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Card, CardBody, Typography, Alert } from '@material-tailwind/react';\n\n// Register necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst RealTimeChart = ({\n  predictions,\n  transactions\n}) => {\n  _s();\n  const [fraudAlert, setFraudAlert] = useState(null);\n\n  // Prepare chart data for Chart.js\n  const chartData = {\n    labels: transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : ''),\n    datasets: [{\n      label: 'Logistic Regression',\n      data: predictions.map(p => p.logistic),\n      borderColor: '#8884d8',\n      fill: false,\n      yAxisID: 'y'\n    }, {\n      label: 'Random Forest',\n      data: predictions.map(p => p.random_forest),\n      borderColor: '#82ca9d',\n      fill: false,\n      yAxisID: 'y'\n    }, {\n      label: 'XGBoost',\n      data: predictions.map(p => p.xgboost),\n      borderColor: '#ffc658',\n      fill: false,\n      yAxisID: 'y'\n    }, {\n      label: 'Transaction Amount',\n      data: transactions.map(t => t.Amount),\n      borderColor: '#00bfff',\n      backgroundColor: '#00bfff',\n      type: 'scatter',\n      // Use scatter plot for amounts\n      yAxisID: 'y1' // Amount should use right axis (y1)\n    }]\n  };\n\n  // Chart.js options for layout and appearance\n  const chartOptions = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Fraud Prediction Probability'\n        },\n        min: 0,\n        max: 1\n      },\n      y1: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Transaction Amount ($)'\n        },\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const value = tooltipItem.raw;\n\n            // Check if the value is a number before formatting\n            if (typeof value === 'number') {\n              if (tooltipItem.dataset.label === 'Transaction Amount') {\n                return `Amount: $${value.toFixed(2)}`;\n              }\n              return `${tooltipItem.dataset.label}: ${value.toFixed(2)}`;\n            }\n\n            // Fallback for non-number types\n            return `${tooltipItem.dataset.label}: ${value}`;\n          }\n        }\n      },\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n\n  // Fraud detection logic\n  useEffect(() => {\n    const latestTransaction = transactions[transactions.length - 1];\n    if (latestTransaction && latestTransaction.Class === 1) {\n      const alertMessage = `🚨 Fraud detected at ${new Date(latestTransaction.Time * 1000).toLocaleTimeString()}`;\n      setFraudAlert(alertMessage);\n    } else {\n      setFraudAlert(null);\n    }\n  }, [transactions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 flex flex-col items-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 32\n      }, this),\n      className: \"w-full max-w-4xl mb-4 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 40\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 46\n          }, this),\n          variant: \"h5\",\n          color: \"blue-gray\",\n          className: \"text-center mb-4\",\n          children: \"Real-Time Fraud Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), fraudAlert && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"red\",\n          icon: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 50\n          }, this),\n          className: \"mb-4 text-center\",\n          children: fraudAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 46\n          }, this),\n          variant: \"h6\",\n          className: \"mt-6 text-center\",\n          children: \"Transaction History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 max-h-64 overflow-y-auto border border-gray-200 rounded-md p-4 bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-sm text-gray-700 mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), \" \", new Date(transaction.Time * 1000).toLocaleTimeString(), \" -\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), \" $\", transaction.Amount.toFixed(2)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimeChart, \"3wjqFIQyC1ppZ92bGskdorGbCGs=\");\n_c = RealTimeChart;\nexport default RealTimeChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Card","CardBody","Typography","Alert","jsxDEV","_jsxDEV","register","RealTimeChart","predictions","transactions","_s","fraudAlert","setFraudAlert","chartData","labels","map","t","Time","Date","toLocaleTimeString","datasets","label","data","p","logistic","borderColor","fill","yAxisID","random_forest","xgboost","Amount","backgroundColor","type","chartOptions","responsive","interaction","mode","intersect","scales","y","position","title","display","text","min","max","y1","beginAtZero","plugins","tooltip","callbacks","tooltipItem","value","raw","dataset","toFixed","legend","latestTransaction","length","Class","alertMessage","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","icon","options","transaction","index","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Card, CardBody, Typography, Alert } from '@material-tailwind/react';\n\n// Register necessary components for Chart.js\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    Class?: number;  // The actual fraud label\n}\n\ninterface RealTimeChartProps {\n    predictions: Prediction[];\n    transactions: Transaction[];\n}\n\nconst RealTimeChart: React.FC<RealTimeChartProps> = ({ predictions, transactions }) => {\n    const [fraudAlert, setFraudAlert] = useState<string | null>(null);\n\n    // Prepare chart data for Chart.js\n    const chartData = {\n        labels: transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : ''),\n        datasets: [\n            {\n                label: 'Logistic Regression',\n                data: predictions.map(p => p.logistic),\n                borderColor: '#8884d8',\n                fill: false,\n                yAxisID: 'y',\n            },\n            {\n                label: 'Random Forest',\n                data: predictions.map(p => p.random_forest),\n                borderColor: '#82ca9d',\n                fill: false,\n                yAxisID: 'y',\n            },\n            {\n                label: 'XGBoost',\n                data: predictions.map(p => p.xgboost),\n                borderColor: '#ffc658',\n                fill: false,\n                yAxisID: 'y',\n            },\n            {\n                label: 'Transaction Amount',\n                data: transactions.map(t => t.Amount),\n                borderColor: '#00bfff',\n                backgroundColor: '#00bfff',\n                type: 'scatter', // Use scatter plot for amounts\n                yAxisID: 'y1',  // Amount should use right axis (y1)\n            }\n        ]\n    };\n\n    // Chart.js options for layout and appearance\n    const chartOptions = {\n        responsive: true,\n        interaction: {\n            mode: 'index' as const,\n            intersect: false,\n        },\n        scales: {\n            y: {\n                type: 'linear' as const,\n                position: 'left' as const,\n                title: {\n                    display: true,\n                    text: 'Fraud Prediction Probability',\n                },\n                min: 0,\n                max: 1,\n            },\n            y1: {\n                type: 'linear' as const,\n                position: 'right' as const,\n                title: {\n                    display: true,\n                    text: 'Transaction Amount ($)',\n                },\n                beginAtZero: true,\n            },\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label: function (tooltipItem: any) {\n                        const value = tooltipItem.raw;\n\n                        // Check if the value is a number before formatting\n                        if (typeof value === 'number') {\n                            if (tooltipItem.dataset.label === 'Transaction Amount') {\n                                return `Amount: $${value.toFixed(2)}`;\n                            }\n                            return `${tooltipItem.dataset.label}: ${value.toFixed(2)}`;\n                        }\n\n                        // Fallback for non-number types\n                        return `${tooltipItem.dataset.label}: ${value}`;\n                    },\n                },\n            },\n            legend: {\n                position: 'top' as const,\n            },\n        }\n    };\n\n    // Fraud detection logic\n    useEffect(() => {\n        const latestTransaction = transactions[transactions.length - 1];\n        if (latestTransaction && latestTransaction.Class === 1) {\n            const alertMessage = `🚨 Fraud detected at ${new Date(latestTransaction.Time * 1000).toLocaleTimeString()}`;\n            setFraudAlert(alertMessage);\n        } else {\n            setFraudAlert(null);\n        }\n    }, [transactions]);\n\n    return (\n        <div className=\"p-4 flex flex-col items-center\">\n            <Card placeholder={<div>Loading...</div>} className=\"w-full max-w-4xl mb-4 shadow-lg\">\n                <CardBody placeholder={<div>Loading...</div>}>\n                    <Typography placeholder={<div>Loading...</div>} variant=\"h5\" color=\"blue-gray\" className=\"text-center mb-4\">\n                        Real-Time Fraud Detection\n                    </Typography>\n\n                    {fraudAlert && (\n                        <Alert color=\"red\" icon={<span>⚠️</span>} className=\"mb-4 text-center\">\n                            {fraudAlert}\n                        </Alert>\n                    )}\n\n                    <div className=\"w-full\">\n                        <Line data={chartData as any} options={chartOptions} />\n                    </div>\n\n                    <Typography placeholder={<div>Loading...</div>} variant=\"h6\" className=\"mt-6 text-center\">\n                        Transaction History\n                    </Typography>\n                    <div className=\"mt-2 max-h-64 overflow-y-auto border border-gray-200 rounded-md p-4 bg-gray-50\">\n                        <ul>\n                            {transactions.map((transaction, index) => (\n                                <li key={index} className=\"text-sm text-gray-700 mb-1\">\n                                    <strong>Time:</strong> {new Date(transaction.Time * 1000).toLocaleTimeString()} -\n                                    <strong> Amount:</strong> ${transaction.Amount.toFixed(2)}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default RealTimeChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}