{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGPT = () => {\n  _s();\n  const [response, setResponse] = useState({\n    role: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    const eventSource = new EventSource(\"https://dev.salesgrid.xyz/secure/rest/chatgpt/\");\n    eventSource.onmessage = event => {\n      const responseObject = JSON.parse(event.data);\n      setResponse(prev => {\n        const responseObjectRole = responseObject[\"role\"] || \"\";\n        const responseObjectContent = responseObject[\"content\"] || \"\";\n        const combinedObject = {\n          role: prev.role + responseObjectRole,\n          content: prev.content + responseObjectContent\n        };\n        return combinedObject;\n      });\n    };\n    eventSource.onerror = error => {\n      console.log(\"Error with SSE connection:\", error);\n    };\n    return () => {\n      eventSource.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: response ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chatGPT response...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGPT, \"rF76PCjxO1vhWF6yr27ADSlB9B4=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChatGPT","_s","response","setResponse","role","content","eventSource","EventSource","onmessage","event","responseObject","JSON","parse","data","prev","responseObjectRole","responseObjectContent","combinedObject","onerror","error","console","log","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\n\ninterface IResponseObject {\n    role: string;\n    content: string;\n}\n\nconst ChatGPT: FC = () => {\n    const [response, setResponse] = useState<IResponseObject>({ role: \"\", content: \"\" });\n\n    useEffect(() => {\n        const eventSource = new EventSource(\"https://dev.salesgrid.xyz/secure/rest/chatgpt/\");\n\n        eventSource.onmessage = (event) => {\n            const responseObject = JSON.parse(event.data);\n\n            setResponse((prev: IResponseObject) => {\n                const responseObjectRole = responseObject[\"role\"] || \"\";\n                const responseObjectContent = responseObject[\"content\"] || \"\";\n                const combinedObject = {\n                    role: prev.role + responseObjectRole,\n                    content: prev.content + responseObjectContent,\n                };\n                return combinedObject;\n            });\n        };\n\n        eventSource.onerror = (error) => {\n            console.log(\"Error with SSE connection:\", error);\n        };\n\n        return () => {\n            eventSource.close();\n        };\n    }, []);\n\n    return (\n        <div>\n            {response ? (\n                <div><pre>{response.content}</pre></div>\n            ) : (\n                <p>Loading chatGPT response...</p>\n            )}\n        </div>\n    );\n};\n\nexport default ChatGPT;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD,MAAMC,OAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAkB;IAAEO,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAEpFT,SAAS,CAAC,MAAM;IACZ,MAAMU,WAAW,GAAG,IAAIC,WAAW,CAAC,gDAAgD,CAAC;IAErFD,WAAW,CAACE,SAAS,GAAIC,KAAK,IAAK;MAC/B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAE7CV,WAAW,CAAEW,IAAqB,IAAK;QACnC,MAAMC,kBAAkB,GAAGL,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE;QACvD,MAAMM,qBAAqB,GAAGN,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE;QAC7D,MAAMO,cAAc,GAAG;UACnBb,IAAI,EAAEU,IAAI,CAACV,IAAI,GAAGW,kBAAkB;UACpCV,OAAO,EAAES,IAAI,CAACT,OAAO,GAAGW;QAC5B,CAAC;QACD,OAAOC,cAAc;MACzB,CAAC,CAAC;IACN,CAAC;IAEDX,WAAW,CAACY,OAAO,GAAIC,KAAK,IAAK;MAC7BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;IACpD,CAAC;IAED,OAAO,MAAM;MACTb,WAAW,CAACgB,KAAK,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIvB,OAAA;IAAAwB,QAAA,EACKrB,QAAQ,gBACLH,OAAA;MAAAwB,QAAA,eAAKxB,OAAA;QAAAwB,QAAA,EAAMrB,QAAQ,CAACG;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAExC5B,OAAA;MAAAwB,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAtCID,OAAW;AAAA4B,EAAA,GAAX5B,OAAW;AAwCjB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}