{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePrediction = () => {\n  _s();\n  var _transaction$Amount$t, _transaction$Amount;\n  const [predictions, setPredictions] = useState(null);\n  const [transaction, setTransaction] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:8000/ws/fraud_detection/\");\n    socket.onopen = event => {\n      console.log(\"WebSocket connection opened\", event);\n    };\n    socket.onmessage = event => {\n      console.log(\"WebSocket message received\", event.data);\n      const data = JSON.parse(event.data);\n      if (data.predictions && data.transaction) {\n        setPredictions(data.predictions);\n        setTransaction(data.transaction);\n      }\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  if (!predictions || !transaction) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Waiting for predictions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Fraud Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transaction Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Amount: $\", (_transaction$Amount$t = (_transaction$Amount = transaction.Amount) === null || _transaction$Amount === void 0 ? void 0 : _transaction$Amount.toFixed(2)) !== null && _transaction$Amount$t !== void 0 ? _transaction$Amount$t : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", transaction.Time ? new Date(transaction.Time * 1000).toLocaleTimeString() : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), transaction.Class !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Actual Class: \", transaction.Class === 1 ? 'Fraud' : 'Not Fraud']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Predictions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logistic Regression: \", predictions.logistic === 1 ? 'Fraud' : 'Not Fraud']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Random Forest: \", predictions.random_forest === 1 ? 'Fraud' : 'Not Fraud']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"XGBoost: \", predictions.xgboost === 1 ? 'Fraud' : 'Not Fraud']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimePrediction, \"dmWNuNVHHoARMdb9AvfTfqGCa28=\");\n_c = RealTimePrediction;\nexport default RealTimePrediction;\nvar _c;\n$RefreshReg$(_c, \"RealTimePrediction\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RealTimePrediction","_s","_transaction$Amount$t","_transaction$Amount","predictions","setPredictions","transaction","setTransaction","socket","WebSocket","onopen","event","console","log","onmessage","data","JSON","parse","close","children","fileName","_jsxFileName","lineNumber","columnNumber","Amount","toFixed","Time","Date","toLocaleTimeString","Class","undefined","logistic","random_forest","xgboost","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport {\n    Card,\n    CardBody,\n    CardFooter,\n    Typography,\n    Button,\n} from \"@material-tailwind/react\";\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    V1: number;\n    V2: number;\n    V3: number;\n    V4: number;\n    V5: number;\n    V6: number;\n    V7: number;\n    V8: number;\n    V9: number;\n    V10: number;\n    V11: number;\n    V12: number;\n    V13: number;\n    V14: number;\n    V15: number;\n    V16: number;\n    V17: number;\n    V18: number;\n    V19: number;\n    V20: number;\n    V21: number;\n    V22: number;\n    V23: number;\n    V24: number;\n    V25: number;\n    V26: number;\n    V27: number;\n    V28: number;\n    Class?: number;  // The actual fraud label\n}\n\nconst RealTimePrediction: React.FC = () => {\n    const [predictions, setPredictions] = useState<Prediction | null>(null);\n    const [transaction, setTransaction] = useState<Transaction | null>(null);\n\n    useEffect(() => {\n        const socket = new WebSocket(\"ws://localhost:8000/ws/fraud_detection/\");\n\n        socket.onopen = (event) => {\n            console.log(\"WebSocket connection opened\", event);\n        };\n\n        socket.onmessage = (event) => {\n            console.log(\"WebSocket message received\", event.data);\n            const data = JSON.parse(event.data);\n            if (data.predictions && data.transaction) {\n                setPredictions(data.predictions);\n                setTransaction(data.transaction);\n            }\n        };\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n    if (!predictions || !transaction) {\n        return <div>Waiting for predictions...</div>;\n    }\n\n    return (\n        <div>\n            <h2>Real-Time Fraud Detection</h2>\n            <h3>Transaction Details:</h3>\n            <p>Amount: ${transaction.Amount?.toFixed(2) ?? 'N/A'}</p>\n            <p>Time: {transaction.Time ? new Date(transaction.Time * 1000).toLocaleTimeString() : 'N/A'}</p>\n            {transaction.Class !== undefined && (\n                <p>Actual Class: {transaction.Class === 1 ? 'Fraud' : 'Not Fraud'}</p>\n            )}\n            <h3>Predictions:</h3>\n            <p>Logistic Regression: {predictions.logistic === 1 ? 'Fraud' : 'Not Fraud'}</p>\n            <p>Random Forest: {predictions.random_forest === 1 ? 'Fraud' : 'Not Fraud'}</p>\n            <p>XGBoost: {predictions.xgboost === 1 ? 'Fraud' : 'Not Fraud'}</p>\n        </div>\n    );\n};\n\nexport default RealTimePrediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}