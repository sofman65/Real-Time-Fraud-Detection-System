{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Card, CardBody, CardFooter, Typography, Input, Button } from \"@material-tailwind/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGPT = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsLoading(true);\n    let buffer = \"\";\n    const assistantMessage = {\n      role: \"assistant\",\n      content: \"\"\n    };\n    setMessages(prev => [...prev, assistantMessage]);\n    const eventSource = new EventSource(`http://localhost:8000/api/chatbot/?message=${encodeURIComponent(input)}`);\n    eventSource.onmessage = event => {\n      const responseObject = JSON.parse(event.data);\n      buffer += responseObject.content || \"\";\n\n      // Process buffer when it contains a complete sentence or thought\n      if (buffer.match(/[.!?]\\s*$/)) {\n        buffer = buffer.replace(/\\n{2,}/g, '\\n').trim(); // Replace multiple newlines\n        setMessages(prev => {\n          const updated = [...prev];\n          updated[updated.length - 1].content += buffer + \" \";\n          return updated;\n        });\n        buffer = \"\";\n      }\n    };\n    eventSource.onerror = error => {\n      console.log(\"Error with SSE connection:\", error);\n      eventSource.close();\n      setIsLoading(false);\n      // Flush any remaining buffer\n      if (buffer) {\n        setMessages(prev => {\n          const updated = [...prev];\n          updated[updated.length - 1].content += buffer.trim();\n          return updated;\n        });\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"w-full max-w-[800px] mx-auto h-[80vh] flex flex-col\",\n    placeholder: undefined,\n    children: [/*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"flex-grow overflow-y-auto p-4\",\n      placeholder: undefined,\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${message.role === \"user\" ? \"text-right\" : \"text-left\"}`,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          placeholder: \"\",\n          variant: \"paragraph\",\n          color: message.role === \"user\" ? \"blue\" : \"gray\",\n          className: `inline-block p-3 rounded-lg ${message.role === \"user\" ? \"bg-blue-100 text-blue-900\" : \"bg-gray-100 text-gray-900\"}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      placeholder: undefined,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Type your message here...\",\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          className: \"flex-grow\",\n          disabled: isLoading,\n          crossOrigin: undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isLoading,\n          placeholder: undefined,\n          children: isLoading ? \"Thinking...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGPT, \"BafHsdwijczbHREsN9kq6NCtkT8=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Card","CardBody","CardFooter","Typography","Input","Button","jsxDEV","_jsxDEV","ChatGPT","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","role","content","prev","buffer","assistantMessage","eventSource","EventSource","encodeURIComponent","onmessage","event","responseObject","JSON","parse","data","match","replace","updated","length","onerror","error","console","log","close","className","placeholder","undefined","children","map","message","index","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","disabled","crossOrigin","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { FC, useEffect, useState, useRef } from \"react\";\nimport {\n    Card,\n    CardBody,\n    CardFooter,\n    Typography,\n    Input,\n    Button,\n} from \"@material-tailwind/react\";\n\ninterface IMessage {\n    role: string;\n    content: string;\n}\n\nconst ChatGPT: FC = () => {\n    const [messages, setMessages] = useState<IMessage[]>([]);\n    const [input, setInput] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const messagesEndRef = useRef<null | HTMLDivElement>(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!input.trim()) return;\n\n        const userMessage: IMessage = { role: \"user\", content: input };\n        setMessages(prev => [...prev, userMessage]);\n        setInput(\"\");\n        setIsLoading(true);\n\n        let buffer = \"\";\n        const assistantMessage: IMessage = { role: \"assistant\", content: \"\" };\n        setMessages(prev => [...prev, assistantMessage]);\n\n        const eventSource = new EventSource(`http://localhost:8000/api/chatbot/?message=${encodeURIComponent(input)}`);\n\n        eventSource.onmessage = (event) => {\n            const responseObject = JSON.parse(event.data);\n            buffer += responseObject.content || \"\";\n\n            // Process buffer when it contains a complete sentence or thought\n            if (buffer.match(/[.!?]\\s*$/)) {\n                buffer = buffer.replace(/\\n{2,}/g, '\\n').trim(); // Replace multiple newlines\n                setMessages(prev => {\n                    const updated = [...prev];\n                    updated[updated.length - 1].content += buffer + \" \";\n                    return updated;\n                });\n                buffer = \"\";\n            }\n        };\n\n        eventSource.onerror = (error) => {\n            console.log(\"Error with SSE connection:\", error);\n            eventSource.close();\n            setIsLoading(false);\n            // Flush any remaining buffer\n            if (buffer) {\n                setMessages(prev => {\n                    const updated = [...prev];\n                    updated[updated.length - 1].content += buffer.trim();\n                    return updated;\n                });\n            }\n        };\n    };\n\n    return (\n        <Card className=\"w-full max-w-[800px] mx-auto h-[80vh] flex flex-col\" placeholder={undefined}>\n            <CardBody className=\"flex-grow overflow-y-auto p-4\" placeholder={undefined}>\n                {messages.map((message, index) => (\n                    <div\n                        key={index}\n                        className={`mb-4 ${message.role === \"user\" ? \"text-right\" : \"text-left\"\n                            }`}\n                    >\n                        <Typography\n                            placeholder=\"\"\n                            variant=\"paragraph\"\n                            color={message.role === \"user\" ? \"blue\" : \"gray\"}\n                            className={`inline-block p-3 rounded-lg ${message.role === \"user\"\n                                ? \"bg-blue-100 text-blue-900\"\n                                : \"bg-gray-100 text-gray-900\"\n                                }`}\n                        >\n                            {message.content}\n                        </Typography>\n                    </div>\n                ))}\n                <div ref={messagesEndRef} />\n            </CardBody>\n            <CardFooter placeholder={undefined}>\n                <form onSubmit={handleSubmit} className=\"flex gap-2\">\n                    <Input\n                        placeholder=\"Type your message here...\"\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        className=\"flex-grow\"\n                        disabled={isLoading}\n                        crossOrigin={undefined}\n                    />\n                    <Button type=\"submit\" disabled={isLoading} placeholder={undefined}>\n                        {isLoading ? \"Thinking...\" : \"Send\"}\n                    </Button>\n                </form>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default ChatGPT;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC9D,SACIC,IAAI,EACJC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,MAAM,QACH,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlC,MAAMC,OAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAa,EAAE,CAAC;EACxD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkB,cAAc,GAAGjB,MAAM,CAAwB,IAAI,CAAC;EAE1D,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACzB,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC;EAEDxB,SAAS,CAACoB,cAAc,EAAE,CAACP,QAAQ,CAAC,CAAC;EAErC,MAAMY,YAAY,GAAIC,CAAkB,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAqB,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEhB;IAAM,CAAC;IAC9DD,WAAW,CAACkB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,WAAW,CAAC,CAAC;IAC3Cb,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAIe,MAAM,GAAG,EAAE;IACf,MAAMC,gBAA0B,GAAG;MAAEJ,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAG,CAAC;IACrEjB,WAAW,CAACkB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,gBAAgB,CAAC,CAAC;IAEhD,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAAC,8CAA8CC,kBAAkB,CAACtB,KAAK,CAAC,EAAE,CAAC;IAE9GoB,WAAW,CAACG,SAAS,GAAIC,KAAK,IAAK;MAC/B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC7CV,MAAM,IAAIO,cAAc,CAACT,OAAO,IAAI,EAAE;;MAEtC;MACA,IAAIE,MAAM,CAACW,KAAK,CAAC,WAAW,CAAC,EAAE;QAC3BX,MAAM,GAAGA,MAAM,CAACY,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAACjB,IAAI,CAAC,CAAC,CAAC,CAAC;QACjDd,WAAW,CAACkB,IAAI,IAAI;UAChB,MAAMc,OAAO,GAAG,CAAC,GAAGd,IAAI,CAAC;UACzBc,OAAO,CAACA,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAChB,OAAO,IAAIE,MAAM,GAAG,GAAG;UACnD,OAAOa,OAAO;QAClB,CAAC,CAAC;QACFb,MAAM,GAAG,EAAE;MACf;IACJ,CAAC;IAEDE,WAAW,CAACa,OAAO,GAAIC,KAAK,IAAK;MAC7BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;MAChDd,WAAW,CAACiB,KAAK,CAAC,CAAC;MACnBlC,YAAY,CAAC,KAAK,CAAC;MACnB;MACA,IAAIe,MAAM,EAAE;QACRnB,WAAW,CAACkB,IAAI,IAAI;UAChB,MAAMc,OAAO,GAAG,CAAC,GAAGd,IAAI,CAAC;UACzBc,OAAO,CAACA,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAChB,OAAO,IAAIE,MAAM,CAACL,IAAI,CAAC,CAAC;UACpD,OAAOkB,OAAO;QAClB,CAAC,CAAC;MACN;IACJ,CAAC;EACL,CAAC;EAED,oBACIpC,OAAA,CAACP,IAAI;IAACkD,SAAS,EAAC,qDAAqD;IAACC,WAAW,EAAEC,SAAU;IAAAC,QAAA,gBACzF9C,OAAA,CAACN,QAAQ;MAACiD,SAAS,EAAC,+BAA+B;MAACC,WAAW,EAAEC,SAAU;MAAAC,QAAA,GACtE3C,QAAQ,CAAC4C,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBjD,OAAA;QAEI2C,SAAS,EAAE,QAAQK,OAAO,CAAC5B,IAAI,KAAK,MAAM,GAAG,YAAY,GAAG,WAAW,EAChE;QAAA0B,QAAA,eAEP9C,OAAA,CAACJ,UAAU;UACPgD,WAAW,EAAC,EAAE;UACdM,OAAO,EAAC,WAAW;UACnBC,KAAK,EAAEH,OAAO,CAAC5B,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,MAAO;UACjDuB,SAAS,EAAE,+BAA+BK,OAAO,CAAC5B,IAAI,KAAK,MAAM,GAC3D,2BAA2B,GAC3B,2BAA2B,EAC1B;UAAA0B,QAAA,EAENE,OAAO,CAAC3B;QAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAdRN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeT,CACR,CAAC,eACFvD,OAAA;QAAKwD,GAAG,EAAE/C;MAAe;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACXvD,OAAA,CAACL,UAAU;MAACiD,WAAW,EAAEC,SAAU;MAAAC,QAAA,eAC/B9C,OAAA;QAAMyD,QAAQ,EAAE1C,YAAa;QAAC4B,SAAS,EAAC,YAAY;QAAAG,QAAA,gBAChD9C,OAAA,CAACH,KAAK;UACF+C,WAAW,EAAC,2BAA2B;UACvCc,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtD,KAAM;UACbuD,QAAQ,EAAG5C,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;UAC1ChB,SAAS,EAAC,WAAW;UACrBmB,QAAQ,EAAEvD,SAAU;UACpBwD,WAAW,EAAElB;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFvD,OAAA,CAACF,MAAM;UAAC4D,IAAI,EAAC,QAAQ;UAACI,QAAQ,EAAEvD,SAAU;UAACqC,WAAW,EAAEC,SAAU;UAAAC,QAAA,EAC7DvC,SAAS,GAAG,aAAa,GAAG;QAAM;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEf,CAAC;AAACrD,EAAA,CApGID,OAAW;AAAA+D,EAAA,GAAX/D,OAAW;AAsGjB,eAAeA,OAAO;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}