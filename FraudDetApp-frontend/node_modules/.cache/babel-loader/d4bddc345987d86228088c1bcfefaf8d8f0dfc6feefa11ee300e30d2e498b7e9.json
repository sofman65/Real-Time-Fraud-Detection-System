{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeChart = ({\n  predictions,\n  transactions\n}) => {\n  console.log(\"Rendering RealTimeChart with predictions:\", predictions);\n  console.log(\"Rendering RealTimeChart with transactions:\", transactions);\n\n  // Generate labels based on the transaction time\n  const timeLabels = transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Logistic: \", prediction.logistic, \", Random Forest: \", prediction.random_forest, \", XGBoost: \", prediction.xgboost]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Time: \", transaction.Time, \", Amount: \", transaction.Amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_c = RealTimeChart;\nexport default RealTimeChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RealTimeChart","predictions","transactions","console","log","timeLabels","map","t","Time","Date","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","prediction","index","logistic","random_forest","xgboost","transaction","Amount","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    V1: number;\n    V2: number;\n    V3: number;\n    V4: number;\n    V5: number;\n    V6: number;\n    V7: number;\n    V8: number;\n    V9: number;\n    V10: number;\n    V11: number;\n    V12: number;\n    V13: number;\n    V14: number;\n    V15: number;\n    V16: number;\n    V17: number;\n    V18: number;\n    V19: number;\n    V20: number;\n    V21: number;\n    V22: number;\n    V23: number;\n    V24: number;\n    V25: number;\n    V26: number;\n    V27: number;\n    V28: number;\n    Class?: number;  // The actual fraud label\n}\n\ninterface RealTimeChartProps {\n    predictions: Prediction[];\n    transactions: Transaction[];\n}\n\nconst RealTimeChart: React.FC<RealTimeChartProps> = ({ predictions, transactions }) => {\n    console.log(\"Rendering RealTimeChart with predictions:\", predictions);\n    console.log(\"Rendering RealTimeChart with transactions:\", transactions);\n\n    // Generate labels based on the transaction time\n    const timeLabels = transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : '');\n\n    return (\n        <div>\n            <h2>Real-Time Predictions</h2>\n            <ul>\n                {predictions.map((prediction, index) => (\n                    <li key={index}>\n                        Logistic: {prediction.logistic}, Random Forest: {prediction.random_forest}, XGBoost: {prediction.xgboost}\n                    </li>\n                ))}\n            </ul>\n            <h2>Transactions</h2>\n            <ul>\n                {transactions.map((transaction, index) => (\n                    <li key={index}>\n                        Time: {transaction.Time}, Amount: {transaction.Amount}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default RealTimeChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA+C1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EACnFC,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEH,WAAW,CAAC;EACrEE,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,YAAY,CAAC;;EAEvE;EACA,MAAMG,UAAU,GAAGH,YAAY,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACC,IAAI,GAAG,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG,EAAE,CAAC;EAEpG,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BhB,OAAA;MAAAY,QAAA,EACKV,WAAW,CAACK,GAAG,CAAC,CAACU,UAAU,EAAEC,KAAK,kBAC/BlB,OAAA;QAAAY,QAAA,GAAgB,YACF,EAACK,UAAU,CAACE,QAAQ,EAAC,mBAAiB,EAACF,UAAU,CAACG,aAAa,EAAC,aAAW,EAACH,UAAU,CAACI,OAAO;MAAA,GADnGH,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLhB,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAAY,QAAA,EACKT,YAAY,CAACI,GAAG,CAAC,CAACe,WAAW,EAAEJ,KAAK,kBACjClB,OAAA;QAAAY,QAAA,GAAgB,QACN,EAACU,WAAW,CAACb,IAAI,EAAC,YAAU,EAACa,WAAW,CAACC,MAAM;MAAA,GADhDL,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACQ,EAAA,GA3BIvB,aAA2C;AA6BjD,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}