{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeChart = ({\n  predictions,\n  transactions\n}) => {\n  console.log(\"Rendering RealTimeChart with predictions:\", predictions);\n  console.log(\"Rendering RealTimeChart with transactions:\", transactions);\n\n  // Generate labels based on the transaction time\n  const timeLabels = transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : '');\n\n  // Prepare data for the chart\n  const chartData = transactions.map((transaction, index) => {\n    var _predictions$index, _predictions$index2, _predictions$index3;\n    return {\n      time: timeLabels[index],\n      logistic: (_predictions$index = predictions[index]) === null || _predictions$index === void 0 ? void 0 : _predictions$index.logistic,\n      random_forest: (_predictions$index2 = predictions[index]) === null || _predictions$index2 === void 0 ? void 0 : _predictions$index2.random_forest,\n      xgboost: (_predictions$index3 = predictions[index]) === null || _predictions$index3 === void 0 ? void 0 : _predictions$index3.xgboost,\n      amount: transaction.Amount\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 600,\n      height: 300,\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"logistic\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"random_forest\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"xgboost\",\n        stroke: \"#ffc658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Time: \", transaction.Time, \", Amount: \", transaction.Amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_c = RealTimeChart;\nexport default RealTimeChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","RealTimeChart","predictions","transactions","console","log","timeLabels","map","t","Time","Date","toLocaleTimeString","chartData","transaction","index","_predictions$index","_predictions$index2","_predictions$index3","time","logistic","random_forest","xgboost","amount","Amount","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    V1: number;\n    V2: number;\n    V3: number;\n    V4: number;\n    V5: number;\n    V6: number;\n    V7: number;\n    V8: number;\n    V9: number;\n    V10: number;\n    V11: number;\n    V12: number;\n    V13: number;\n    V14: number;\n    V15: number;\n    V16: number;\n    V17: number;\n    V18: number;\n    V19: number;\n    V20: number;\n    V21: number;\n    V22: number;\n    V23: number;\n    V24: number;\n    V25: number;\n    V26: number;\n    V27: number;\n    V28: number;\n    Class?: number;  // The actual fraud label\n}\n\ninterface RealTimeChartProps {\n    predictions: Prediction[];\n    transactions: Transaction[];\n}\n\nconst RealTimeChart: React.FC<RealTimeChartProps> = ({ predictions, transactions }) => {\n    console.log(\"Rendering RealTimeChart with predictions:\", predictions);\n    console.log(\"Rendering RealTimeChart with transactions:\", transactions);\n\n    // Generate labels based on the transaction time\n    const timeLabels = transactions.map(t => t.Time ? new Date(t.Time * 1000).toLocaleTimeString() : '');\n\n    // Prepare data for the chart\n    const chartData = transactions.map((transaction, index) => ({\n        time: timeLabels[index],\n        logistic: predictions[index]?.logistic,\n        random_forest: predictions[index]?.random_forest,\n        xgboost: predictions[index]?.xgboost,\n        amount: transaction.Amount,\n    }));\n\n    return (\n        <div>\n            <h2>Real-Time Predictions</h2>\n            <LineChart\n                width={600}\n                height={300}\n                data={chartData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"logistic\" stroke=\"#8884d8\" />\n                <Line type=\"monotone\" dataKey=\"random_forest\" stroke=\"#82ca9d\" />\n                <Line type=\"monotone\" dataKey=\"xgboost\" stroke=\"#ffc658\" />\n            </LineChart>\n            <h2>Transactions</h2>\n            <ul>\n                {transactions.map((transaction, index) => (\n                    <li key={index}>\n                        Time: {transaction.Time}, Amount: {transaction.Amount}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default RealTimeChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}