{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card, CardBody, CardFooter, Typography, Button } from '@material-tailwind/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeChart = ({\n  predictions,\n  transactions\n}) => {\n  const timeLabels = transactions.map(t => new Date(t.Time * 1000).toLocaleTimeString());\n  const data = {\n    labels: timeLabels,\n    datasets: [{\n      label: 'Logistic Regression',\n      data: predictions.map(p => p.logistic),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: false\n    }, {\n      label: 'Random Forest',\n      data: predictions.map(p => p.random_forest),\n      borderColor: 'rgba(153, 102, 255, 1)',\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\n      fill: false\n    }, {\n      label: 'XGBoost',\n      data: predictions.map(p => p.xgboost),\n      borderColor: 'rgba(255, 159, 64, 1)',\n      backgroundColor: 'rgba(255, 159, 64, 0.2)',\n      fill: false\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'minute'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 1\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    placeholder: true,\n    className: \"w-full h-full\",\n    children: [/*#__PURE__*/_jsxDEV(CardBody, {\n      placeholder: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        placeholder: true,\n        variant: \"h5\",\n        color: \"blue-gray\",\n        className: \"mb-2\",\n        children: \"Real-Time Fraud Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        placeholder: true,\n        color: \"blue\",\n        onClick: () => window.location.reload(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_c = RealTimeChart;\nexport default RealTimeChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChart\");","map":{"version":3,"names":["React","Line","Card","CardBody","CardFooter","Typography","Button","jsxDEV","_jsxDEV","RealTimeChart","predictions","transactions","timeLabels","map","t","Date","Time","toLocaleTimeString","data","labels","datasets","label","p","logistic","borderColor","backgroundColor","fill","random_forest","xgboost","options","scales","x","type","time","unit","y","beginAtZero","max","placeholder","className","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimeChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card, CardBody, CardFooter, Typography, Button } from '@material-tailwind/react';\nimport { ChartOptions } from 'chart.js';\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    V1: number;\n    V2: number;\n    V3: number;\n    V4: number;\n    V5: number;\n    V6: number;\n    V7: number;\n    V8: number;\n    V9: number;\n    V10: number;\n    V11: number;\n    V12: number;\n    V13: number;\n    V14: number;\n    V15: number;\n    V16: number;\n    V17: number;\n    V18: number;\n    V19: number;\n    V20: number;\n    V21: number;\n    V22: number;\n    V23: number;\n    V24: number;\n    V25: number;\n    V26: number;\n    V27: number;\n    V28: number;\n    Class?: number;  // The actual fraud label, if present in your data\n}\n\ninterface RealTimeChartProps {\n    predictions: Prediction[];\n    transactions: Transaction[];\n}\n\nconst RealTimeChart: React.FC<RealTimeChartProps> = ({ predictions, transactions }) => {\n    const timeLabels = transactions.map(t => new Date(t.Time * 1000).toLocaleTimeString());\n\n    const data = {\n        labels: timeLabels,\n        datasets: [\n            {\n                label: 'Logistic Regression',\n                data: predictions.map(p => p.logistic),\n                borderColor: 'rgba(75, 192, 192, 1)',\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                fill: false,\n            },\n            {\n                label: 'Random Forest',\n                data: predictions.map(p => p.random_forest),\n                borderColor: 'rgba(153, 102, 255, 1)',\n                backgroundColor: 'rgba(153, 102, 255, 0.2)',\n                fill: false,\n            },\n            {\n                label: 'XGBoost',\n                data: predictions.map(p => p.xgboost),\n                borderColor: 'rgba(255, 159, 64, 1)',\n                backgroundColor: 'rgba(255, 159, 64, 0.2)',\n                fill: false,\n            },\n        ],\n    };\n\n    const options: ChartOptions<'line'> = {\n        scales: {\n            x: {\n                type: 'time',\n                time: {\n                    unit: 'minute',\n                },\n            },\n            y: {\n                beginAtZero: true,\n                max: 1,\n            },\n        },\n    };\n\n    return (\n        <Card placeholder={true}\n            className=\"w-full h-full\"\n        >\n            <CardBody placeholder={true}>\n                <Typography placeholder={true} variant=\"h5\" color=\"blue-gray\" className=\"mb-2\">\n                    Real-Time Fraud Detection\n                </Typography>\n                <Line data={data} options={options} />\n            </CardBody>\n            <CardFooter placeholder={true}>\n                <Button placeholder={true} color=\"blue\" onClick={() => window.location.reload()}>\n                    Refresh\n                </Button>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default RealTimeChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}