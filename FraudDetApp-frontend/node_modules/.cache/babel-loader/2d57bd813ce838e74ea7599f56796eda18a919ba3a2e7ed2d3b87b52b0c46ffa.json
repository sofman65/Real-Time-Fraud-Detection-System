{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RealTimeChart from './RealTimeChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePrediction = () => {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:8000/ws/fraud_detection/\");\n    socket.onopen = event => {\n      console.log(\"WebSocket connection opened\", event);\n    };\n    socket.onmessage = event => {\n      console.log(\"WebSocket message received\", event.data);\n      const data = JSON.parse(event.data);\n      if (data.predictions && data.transaction) {\n        console.log(\"Updating state with new data\", data);\n        setPredictions(prev => [...prev, data.predictions]);\n        setTransactions(prev => [...prev, data.transaction]);\n      }\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  if (predictions.length === 0 || transactions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Waiting for predictions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(RealTimeChart, {\n      predictions: predictions,\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimePrediction, \"grqJ8O288ogJK6Mtmlbq6v8r8hw=\");\n_c = RealTimePrediction;\nexport default RealTimePrediction;\nvar _c;\n$RefreshReg$(_c, \"RealTimePrediction\");","map":{"version":3,"names":["React","useState","useEffect","RealTimeChart","jsxDEV","_jsxDEV","RealTimePrediction","_s","predictions","setPredictions","transactions","setTransactions","socket","WebSocket","onopen","event","console","log","onmessage","data","JSON","parse","transaction","prev","close","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RealTimeChart from './RealTimeChart';\n\ninterface Prediction {\n    logistic: number;\n    random_forest: number;\n    xgboost: number;\n}\n\ninterface Transaction {\n    Time: number;\n    Amount: number;\n    V1: number;\n    V2: number;\n    V3: number;\n    V4: number;\n    V5: number;\n    V6: number;\n    V7: number;\n    V8: number;\n    V9: number;\n    V10: number;\n    V11: number;\n    V12: number;\n    V13: number;\n    V14: number;\n    V15: number;\n    V16: number;\n    V17: number;\n    V18: number;\n    V19: number;\n    V20: number;\n    V21: number;\n    V22: number;\n    V23: number;\n    V24: number;\n    V25: number;\n    V26: number;\n    V27: number;\n    V28: number;\n    Class?: number;  // The actual fraud label\n}\n\nconst RealTimePrediction: React.FC = () => {\n    const [predictions, setPredictions] = useState<Prediction[]>([]);\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n    useEffect(() => {\n        const socket = new WebSocket(\"ws://localhost:8000/ws/fraud_detection/\");\n\n        socket.onopen = (event) => {\n            console.log(\"WebSocket connection opened\", event);\n        };\n\n        socket.onmessage = (event) => {\n            console.log(\"WebSocket message received\", event.data);\n            const data = JSON.parse(event.data);\n            if (data.predictions && data.transaction) {\n                console.log(\"Updating state with new data\", data);\n                setPredictions(prev => [...prev, data.predictions]);\n                setTransactions(prev => [...prev, data.transaction]);\n            }\n        };\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n    if (predictions.length === 0 || transactions.length === 0) {\n        return <div>Waiting for predictions...</div>;\n    }\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <RealTimeChart predictions={predictions} transactions={transactions} />\n        </div>\n    );\n};\n\nexport default RealTimePrediction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA0C5C,MAAMC,kBAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAe,EAAE,CAAC;EAChE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAgB,EAAE,CAAC;EAEnEC,SAAS,CAAC,MAAM;IACZ,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,yCAAyC,CAAC;IAEvED,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACvBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;IACrD,CAAC;IAEDH,MAAM,CAACM,SAAS,GAAIH,KAAK,IAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAACI,IAAI,CAAC;MACrD,MAAMA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACI,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACX,WAAW,IAAIW,IAAI,CAACG,WAAW,EAAE;QACtCN,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,IAAI,CAAC;QACjDV,cAAc,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAACX,WAAW,CAAC,CAAC;QACnDG,eAAe,CAACY,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAACG,WAAW,CAAC,CAAC;MACxD;IACJ,CAAC;IAED,OAAO,MAAM;MACTV,MAAM,CAACY,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIhB,WAAW,CAACiB,MAAM,KAAK,CAAC,IAAIf,YAAY,CAACe,MAAM,KAAK,CAAC,EAAE;IACvD,oBAAOpB,OAAA;MAAAqB,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChD;EAEA,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,uBAAuB;IAAAL,QAAA,eAClCrB,OAAA,CAACF,aAAa;MAACK,WAAW,EAAEA,WAAY;MAACE,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEd,CAAC;AAACvB,EAAA,CAnCID,kBAA4B;AAAA0B,EAAA,GAA5B1B,kBAA4B;AAqClC,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}