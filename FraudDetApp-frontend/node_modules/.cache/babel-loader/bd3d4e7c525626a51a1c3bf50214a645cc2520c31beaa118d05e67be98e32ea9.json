{"ast":null,"code":"var _jsxFileName = \"/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimePrediction = () => {\n  _s();\n  const [predictions, setPredictions] = useState(null);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8000/ws/fraud_detection/');\n\n    // Handle when WebSocket connection is opened\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n\n    // Handle incoming WebSocket messages\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setPredictions(data);\n    };\n\n    // Handle errors\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Handle WebSocket closure\n    socket.onclose = event => {\n      if (event.wasClean) {\n        console.log(`WebSocket closed cleanly, code=${event.code}, reason=${event.reason}`);\n      } else {\n        console.error('WebSocket closed unexpectedly');\n      }\n    };\n\n    // Clean up WebSocket connection when the component unmounts\n    return () => {\n      if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\n        console.log('Closing WebSocket connection...');\n        socket.close(); // Ensure the connection is properly closed when unmounting\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: predictions ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predictions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(predictions, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for predictions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimePrediction, \"Jb7v23xbgnBCn7h/SrG94EtpTTU=\");\n_c = RealTimePrediction;\nexport default RealTimePrediction;\nvar _c;\n$RefreshReg$(_c, \"RealTimePrediction\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RealTimePrediction","_s","predictions","setPredictions","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","onerror","error","onclose","wasClean","code","reason","readyState","OPEN","CONNECTING","close","children","fileName","_jsxFileName","lineNumber","columnNumber","stringify","_c","$RefreshReg$"],"sources":["/Users/lsofianos/Documents/proj-FraudDetApp/FraudDetApp-frontend/src/components/RealTimePrediction.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst RealTimePrediction = () => {\n    const [predictions, setPredictions] = useState(null);\n\n    useEffect(() => {\n        const socket = new WebSocket('ws://localhost:8000/ws/fraud_detection/');\n\n        // Handle when WebSocket connection is opened\n        socket.onopen = () => {\n            console.log('WebSocket connection established.');\n        };\n\n        // Handle incoming WebSocket messages\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            setPredictions(data);\n        };\n\n        // Handle errors\n        socket.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n\n        // Handle WebSocket closure\n        socket.onclose = (event) => {\n            if (event.wasClean) {\n                console.log(`WebSocket closed cleanly, code=${event.code}, reason=${event.reason}`);\n            } else {\n                console.error('WebSocket closed unexpectedly');\n            }\n        };\n\n        // Clean up WebSocket connection when the component unmounts\n        return () => {\n            if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\n                console.log('Closing WebSocket connection...');\n                socket.close(); // Ensure the connection is properly closed when unmounting\n            }\n        };\n    }, []);\n\n    return (\n        <div>\n            {predictions ? (\n                <div>\n                    <h3>Predictions:</h3>\n                    <pre>{JSON.stringify(predictions, null, 2)}</pre>\n                </div>\n            ) : (\n                <p>Waiting for predictions...</p>\n            )}\n        </div>\n    );\n};\n\nexport default RealTimePrediction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,MAAM,GAAG,IAAIC,SAAS,CAAC,yCAAyC,CAAC;;IAEvE;IACAD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IACpD,CAAC;;IAED;IACAJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC1B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCR,cAAc,CAACQ,IAAI,CAAC;IACxB,CAAC;;IAED;IACAP,MAAM,CAACU,OAAO,GAAIC,KAAK,IAAK;MACxBR,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC;;IAED;IACAX,MAAM,CAACY,OAAO,GAAIN,KAAK,IAAK;MACxB,IAAIA,KAAK,CAACO,QAAQ,EAAE;QAChBV,OAAO,CAACC,GAAG,CAAC,kCAAkCE,KAAK,CAACQ,IAAI,YAAYR,KAAK,CAACS,MAAM,EAAE,CAAC;MACvF,CAAC,MAAM;QACHZ,OAAO,CAACQ,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ,CAAC;;IAED;IACA,OAAO,MAAM;MACT,IAAIX,MAAM,CAACgB,UAAU,KAAKf,SAAS,CAACgB,IAAI,IAAIjB,MAAM,CAACgB,UAAU,KAAKf,SAAS,CAACiB,UAAU,EAAE;QACpFf,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9CJ,MAAM,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;MACpB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIxB,OAAA;IAAAyB,QAAA,EACKtB,WAAW,gBACRH,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB7B,OAAA;QAAAyB,QAAA,EAAMZ,IAAI,CAACiB,SAAS,CAAC3B,WAAW,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,gBAEN7B,OAAA;MAAAyB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CApDID,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAsDxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}